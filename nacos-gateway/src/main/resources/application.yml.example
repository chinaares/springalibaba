server:
  port: 8891

spring:
  application:
    name: nacos-gateway
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/security?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&useSSL=true&autoReconnect=true&zeroDateTimeBehavior=CONVERT_TO_NULL
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  redis:
    host: localhost
    port: 6379
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 500
        min-idle: 0
  cloud:
    gateway:
      # globalcors:
      #   cors-configurations:
      #     '[/**]':
      #       allowed-origins: "*"
      #       allowed-headers: "*"
      #       allow-credentials: true
      #       allowed-methods:
      #         - GET
      #         - POST
      #         - DELETE
      #         - PUT
      #         - OPTION
      discovery:
        locator:
          #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务
          enabled: true
          #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了
          lower-case-service-id: true
      routes:
        - id: nocas-provide
          uri: lb://nocas-provide
          predicates:
            - Path=/nocas-provide/**
          filters:
            # 作用是去掉请求路径的最前面n个
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 3
                key-resolver: "#{@ipKeyResolver}"
        - id: nocas-feign
          uri: lb://nocas-feign
          predicates:
            - Path=/nocas-feign/**
          filters:
            - StripPrefix=1
        - id: nocas-consumer
          uri: lb://nocas-consumer
          predicates:
            - Path=/nocas-consumer/**
          filters:
            - StripPrefix=1

gateway:
  # 不校验websocket token
  auth-ws-token: false
  public-urls:
    - /doc.html
    - /**/v2/api-docs
    - /**/favicon.ico
    - /api/user-manage/user/login
    - /api/user-manage/dt/user/login
    - /api/user-manage/dt/captcha/sms/**
    - /api/biz/newPerson/addPerson
    - /api/biz/file/download/**
    - /api/thry/**
