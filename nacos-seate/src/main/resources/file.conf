transport {
  # tcp udt unix-domain-socket
  type = "TCP"
  #NIO NATIVE
  server = "NIO"
  #enable heartbeat
  heartbeat = true
  # the client batch send request enable
  enableClientBatchSendRequest = true
  #thread factory for netty
  threadFactory {
    bossThreadPrefix = "NettyBoss"
    workerThreadPrefix = "NettyServerNIOWorker"
    serverExecutorThread-prefix = "NettyServerBizHandler"
    shareBossWorker = false
    clientSelectorThreadPrefix = "NettyClientSelector"
    clientSelectorThreadSize = 1
    clientWorkerThreadPrefix = "NettyClientWorkerThread"
    # netty boss thread size,will not be used for UDT
    bossThreadSize = 1
    #auto default pin or 8
    workerThreadSize = "default"
  }
  shutdown {
    # when destroy server, wait seconds
    wait = 3
  }
  serialization = "seata"
  compressor = "none"
}
service {
  #vgroup->rgroup
  vgroupMapping.tx-service-group = "default"  # tx-service-group需要修改为你的微服务的配置文件bootstrap.yml中tx-service-group
  #only support single node
  default.grouplist = "127.0.0.1:8091"  # 修改为你的seata的地址
  #degrade current not support
  enableDegrade = false
  #disable
  disable = false
  #unit ms,s,m,h,d represents milliseconds, seconds, minutes, hours, days, default permanent
  max.commit.retry.timeout = "-1"
  max.rollback.retry.timeout = "-1"
}


client {
  rm {
    asyncCommitBufferLimit = 10000
    lock {
      retryInterval = 10
      retryTimes = 30
      retryPolicyBranchRollbackOnConflict = true
    }
    reportRetryCount = 5
    tableMetaCheckEnable = false
    reportSuccessEnable = false
  }
  tm {
    commitRetryCount = 5
    rollbackRetryCount = 5
  }
  undo {
    dataValidation = true
    logSerialization = "jackson"
    logTable = "undo_log"
  }
  log {
    exceptionRate = 100
  }
}


# transport：与TC交互的一些配置
#
# heartbeat：client和server通信心跳检测开关
#
# enableClientBatchSendRequest：客户端事务消息请求是否批量合并发送
#
# service：TC的地址配置，用于获取TC的地址
#
# vgroupMapping.test_tx_group = "default"：
#
# test_tx_group：是事务组名称，要与application.yml中配置一致，
#
# seata_tc_server：是TC服务端集群的名称，将来通过注册中心获取TC地址
#
# enableDegrade：服务降级开关，默认关闭。如果开启，当业务重试多次失败后会放弃全局事务
#
# disableGlobalTransaction：全局事务开关，默认false。false为开启，true为关闭
#
# default.grouplist：这个当注册中心为file的时候，才用到
#
# client：客户端配置
#
# rm：资源管理器配
#
# asynCommitBufferLimit：二阶段提交默认是异步执行，这里指定异步队列的大小
#
# lock：全局锁配置
#
# retryInterval：校验或占用全局锁重试间隔，默认10，单位毫秒
#
# retryTimes：校验或占用全局锁重试次数，默认30次
#
# retryPolicyBranchRollbackOnConflict：分支事务与其它全局回滚事务冲突时锁策略，默认true，优先释放本地锁让回滚成功
#
# reportRetryCount：一阶段结果上报TC失败后重试次数，默认5次
#
# tm：事务管理器配置
#
# commitRetryCount：一阶段全局提交结果上报TC重试次数，默认1
#
# rollbackRetryCount：一阶段全局回滚结果上报TC重试次数，默认1
#
# undo：undo_log的配置
#
# dataValidation：是否开启二阶段回滚镜像校验，默认true
#
# logSerialization：undo序列化方式，默认Jackson
#
# logTable：自定义undo表名，默认是undo_log
#
# log：日志配置
#
# exceptionRate：出现回滚异常时的日志记录频率，默认100，百分之一概率。回滚失败基本是脏数据，无需输出堆栈占用硬盘空间